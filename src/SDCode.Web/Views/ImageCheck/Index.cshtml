@model ImageCheckIndexViewModel
@{
    ViewData["Title"] = "Image Check";
}

<script>
    function isInViewport(element) { @* todo mlh refactor to avoid duplication of same method in other view *@
        const rect = element.getBoundingClientRect();
        return (
            rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
            rect.right <= (window.innerWidth || document.documentElement.clientWidth)
        );
    }

    document.addEventListener("DOMContentLoaded", function() {
        var imageElement = document.getElementById('image');
        var updateScreen = function() {
            var browserIsReady = isInViewport(imageElement);
            var divToShow = browserIsReady ? 'Ready' : 'NotReady';
            if (document.getElementById(divToShow).style.display === 'none') {
                var divToHide = divToShow === 'Ready' ? 'NotReady' : 'Ready';
                document.getElementById(divToHide).style.display = 'none';
                document.getElementById(divToShow).style.display = 'block';
                imageElement.src = `/img/800x700_${divToShow}.png`;
                imageElement.style.borderColor = browserIsReady ? 'green' : 'red';
            }
            setTimeout(updateScreen, 10);
        };
        updateScreen();
    });
</script>

<div style="vertical-align: top; text-align: center;">
    <img id="image" style="width: 800px; height: 700px; border: solid 3px black;" />
</div>
<div style="display: block;">
    
    <form action="@Model.NextActionAfterImageCheck" method="POST">
        <input type="hidden" name="participantID" value="@Model.ParticipantID" />
        <input type="hidden" name="stanford" value="@(Model.Stanford.HasValue ? (((int)Model.Stanford).ToString()) : (string.Empty))" />

    <h1 class="display-4; text-center;">Preparing to View Images</h1> @* todo mlh throughout entire codebase and user experience (including browser address bar URLs...), choose "Study" or "Encoding" and use it consistently, removing references to the competing, synonymous jargon *@
    <p>IMAGES_PLACEMENT_ORIENTATION_PLACEHOLDER</p>
    <div id="NotReady" style="display: none;">
        <p>Your browser is not ready.</p>
        <p><strong>Resize your browser until the 800x700 image above is fully visible.</strong></p>
    </div>
    <div id="Ready" style="display: none;">
        <p><strong>IMPORTANT: Keep your browser window sized such that images remain visible at all times.</strong></p>
        <p>Press the "Next" button to begin.</p>
        <div style="text-align: right;">
            <input style="margin-right: 50px;" type="submit" value="Next"/>
        </div>
    </div>
    </form>

</div>