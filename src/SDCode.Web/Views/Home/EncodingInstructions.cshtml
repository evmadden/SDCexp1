@using SDCode.Web.Classes
@model EncodingInstructionsViewModel;
@{
    ViewData["Title"] = "Part 1 Instructions";
}

@await Html.PartialAsync("~/Views/Shared/LogoBanner.cshtml")

<div>
    <h1 class="display-4">Part 1 Instructions</h1>
    <div class="orientationContainer rounded">
        <p>This is the STUDY PHASE.</p>
    </div>
    <p>You will see @Model.StimuliCount @(await Component.InvokeAsync("StimuliTypeName", new { wordForm = WordForm.LowerPlural })) with @Model.TargetCount @(await Component.InvokeAsync("TargetTypeName", new { wordForm = WordForm.LowerPlural, describeDecoration = true })).  Please pay attention and try to memorize only the @(await Component.InvokeAsync("TargetTypeName", new { wordForm = WordForm.LowerPlural, describeDecoration = true })) in the @(await Component.InvokeAsync("ContextTypeName", new { wordForm = WordForm.LowerSingular })).  
        Each @(await Component.InvokeAsync("StimuliTypeName", new { wordForm = WordForm.LowerSingular })) will be presented for 3 seconds.  Throughout the STUDY phase, numbers will randomly appear on the screen.
        Any time you see a number, press the SPACE bar.</p>
    <p>Press the "Next" button to start the Study Phase.</p>
</div>
<div id="formDiv">
    <form action="@Url.Action("Index", "ImageCheck")" method="POST">
        <input type="hidden" name="participantID" value="@Model.ParticipantID" />
        <input type="hidden" name="nextActionAfterImageCheck" value="@Model.NextActionAfterImageCheck" />
        <input type="hidden" name="showSpacebarOrientation" value="@($"{Model.ShowSpacebarOrientation}".ToLower())" />
        <input type="hidden" name="stanford" value="@(Model.Stanford)" />
        @await Html.PartialAsync("~/Views/Shared/ActionBar.cshtml", new ActionBarViewModel("Next"))
    </form>
</div>