@model DebriefIndexViewModel
@{
    ViewData["Title"] = "Debrief";
}

@await Html.PartialAsync("~/Views/Shared/LogoMasthead.cshtml")
@await Html.PartialAsync("~/Views/Shared/FullscreenExempt.cshtml")

<div>
    <h1 class="display-5">Debrief Information</h1>
    <p>Thank you for your participation in our @await Component.InvokeAsync("StudyTitle").</p>
    <div>
        @Html.Raw(Model.DebriefHtml)
    </div>
        <p>Please feel free to contact the 
            @if (Model.Researchers.Count == 1) {
                var researcher = @Model.Researchers.Single();
                <span>researcher @researcher.Name - <a href="mailto:@researcher.EmailAddress">@researcher.EmailAddress</a>.</span>
            } else if (Model.Researchers.Count > 1) {
                <span>
                    researchers:
                    <ul>
                        @foreach (var researcher in Model.Researchers)
                        {
                            <li>@researcher.Name - <a href="mailto:@researcher.EmailAddress">@researcher.EmailAddress</a></li>
                        }
                    </ul>
                </span>
            } else {
                <span>researcher(s).</span>
            }
        </p>
    </p>
    <p>@await Html.PartialAsync("~/Views/Shared/Close.cshtml")</p>
</div>